{"ast":null,"code":"import React,{useEffect,useState}from'react';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import axios from'axios';import'./DashboardPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardPage=_ref=>{let{id,setIsAuthenticated}=_ref;// const [id,setId] = useState();\n// setId(outid);\nconst[tasks,setTasks]=useState({todo:[],inProgress:[],check:[],finished:[]});console.log({id});// Fetch tasks for the logged-in user\nuseEffect(()=>{const fetchTasks=async()=>{try{console.log({id});const response=await axios.get(`http://localhost:3001/dashboard?id=${id}`);const taskData=response.data.results;// Organize tasks based on their task_status\nconst organizedTasks={todo:[],inProgress:[],check:[],finished:[]};taskData.forEach(task=>{switch(task.task_status){case 1:organizedTasks.todo.push(task);break;case 2:organizedTasks.inProgress.push(task);break;case 3:organizedTasks.check.push(task);break;case 4:organizedTasks.finished.push(task);break;default:break;}});setTasks(organizedTasks);}catch(error){console.error('Error fetching tasks:',error);}};fetchTasks();},[id]);// Handle drag and drop functionality\nconst handleOnDragEnd=result=>{const{destination,source,draggableId}=result;if(!destination)return;// If the task is dropped into the same position, do nothing\nif(destination.droppableId===source.droppableId&&destination.index===source.index){return;}const sourceColumn=source.droppableId;const destinationColumn=destination.droppableId;const movedTask=tasks[sourceColumn][source.index];// If task is being moved between columns\nif(sourceColumn!==destinationColumn){const updatedSourceTasks=[...tasks[sourceColumn]];const updatedDestinationTasks=[...tasks[destinationColumn]];// Remove from the source and add to the destination\nupdatedSourceTasks.splice(source.index,1);updatedDestinationTasks.splice(destination.index,0,movedTask);setTasks({...tasks,[sourceColumn]:updatedSourceTasks,[destinationColumn]:updatedDestinationTasks});// Optionally, send an API request to update task status on the server\nmovedTask.task_status=getColumnStatus(destinationColumn);axios.put(`http://localhost:3001/dashboard?id=${movedTask.id}&task_id=${movedTask.task_id}&task_status=${movedTask.task_status}`,{task_status:getColumnStatus(destinationColumn)});console.log(movedTask.task_id);}};// Map column IDs to task statuses\nconst getColumnStatus=columnId=>{switch(columnId){case'todo':return 1;case'inProgress':return 2;case'check':return 3;case'finished':return 4;default:return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleOnDragEnd,children:/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(Droppable,{droppableId:\"todo\",children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"column\",ref:provided.innerRef,...provided.droppableProps,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"To Do\"}),tasks.todo.map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:String(task.id),index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:task.task_name})})})},task.id)),provided.placeholder]})}),/*#__PURE__*/_jsx(Droppable,{droppableId:\"inProgress\",children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"column\",ref:provided.innerRef,...provided.droppableProps,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"In Progress\"}),tasks.inProgress.map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:String(task.id),index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:task.task_name})})})},task.id)),provided.placeholder]})}),/*#__PURE__*/_jsx(Droppable,{droppableId:\"check\",children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"column\",ref:provided.innerRef,...provided.droppableProps,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Check\"}),tasks.check.map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:String(task.id),index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:task.task_name})})})},task.id)),provided.placeholder]})}),/*#__PURE__*/_jsx(Droppable,{droppableId:\"finished\",children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"column\",ref:provided.innerRef,...provided.droppableProps,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Finished\"}),tasks.finished.map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:String(task.id),index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:task.task_name})})})},task.id)),provided.placeholder]})})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAuthenticated(false),children:\"Logout\"})]});};export default DashboardPage;","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsx","_jsx","jsxs","_jsxs","DashboardPage","_ref","id","setIsAuthenticated","tasks","setTasks","todo","inProgress","check","finished","console","log","fetchTasks","response","get","taskData","data","results","organizedTasks","forEach","task","task_status","push","error","handleOnDragEnd","result","destination","source","draggableId","droppableId","index","sourceColumn","destinationColumn","movedTask","updatedSourceTasks","updatedDestinationTasks","splice","getColumnStatus","put","task_id","columnId","className","children","onDragEnd","provided","ref","innerRef","droppableProps","map","String","draggableProps","dragHandleProps","task_name","placeholder","onClick"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project/src/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport './DashboardPage.css';\r\n\r\nconst DashboardPage = ({ id, setIsAuthenticated }) => {\r\n   // const [id,setId] = useState();\r\n   // setId(outid);\r\n  const [tasks, setTasks] = useState({\r\n    todo: [],\r\n    inProgress: [],\r\n    check: [],\r\n    finished: [],\r\n  });\r\n  console.log({id});\r\n\r\n  // Fetch tasks for the logged-in user\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        console.log({id});\r\n        const response = await axios.get(`http://localhost:3001/dashboard?id=${id}`);\r\n        const taskData = response.data.results;\r\n\r\n        // Organize tasks based on their task_status\r\n        const organizedTasks = {\r\n          todo: [],\r\n          inProgress: [],\r\n          check: [],\r\n          finished: [],\r\n        };\r\n\r\n        taskData.forEach(task => {\r\n          switch (task.task_status) {\r\n            case 1:\r\n              organizedTasks.todo.push(task);\r\n              break;\r\n            case 2:\r\n              organizedTasks.inProgress.push(task);\r\n              break;\r\n            case 3:\r\n              organizedTasks.check.push(task);\r\n              break;\r\n            case 4:\r\n              organizedTasks.finished.push(task);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        setTasks(organizedTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [id]);\r\n\r\n  // Handle drag and drop functionality\r\n  const handleOnDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    // If the task is dropped into the same position, do nothing\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const sourceColumn = source.droppableId;\r\n    const destinationColumn = destination.droppableId;\r\n\r\n    const movedTask = tasks[sourceColumn][source.index];\r\n\r\n    // If task is being moved between columns\r\n    if (sourceColumn !== destinationColumn) {\r\n      const updatedSourceTasks = [...tasks[sourceColumn]];\r\n      const updatedDestinationTasks = [...tasks[destinationColumn]];\r\n\r\n      // Remove from the source and add to the destination\r\n      updatedSourceTasks.splice(source.index, 1);\r\n      updatedDestinationTasks.splice(destination.index, 0, movedTask);\r\n\r\n      setTasks({\r\n        ...tasks,\r\n        [sourceColumn]: updatedSourceTasks,\r\n        [destinationColumn]: updatedDestinationTasks,\r\n      });\r\n\r\n      // Optionally, send an API request to update task status on the server\r\n      movedTask.task_status = getColumnStatus(destinationColumn);\r\n      axios.put(`http://localhost:3001/dashboard?id=${movedTask.id}&task_id=${movedTask.task_id}&task_status=${movedTask.task_status}`, {\r\n        task_status: getColumnStatus(destinationColumn),\r\n      });\r\n      console.log(movedTask.task_id);\r\n    }\r\n  };\r\n\r\n  // Map column IDs to task statuses\r\n  const getColumnStatus = (columnId) => {\r\n    switch (columnId) {\r\n      case 'todo':\r\n        return 1;\r\n      case 'inProgress':\r\n        return 2;\r\n      case 'check':\r\n        return 3;\r\n      case 'finished':\r\n        return 4;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <div className=\"columns\">\r\n          {/* To Do Column */}\r\n          <Droppable droppableId=\"todo\">\r\n            {(provided) => (\r\n              <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h2>To Do</h2>\r\n                {tasks.todo.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={String(task.id)} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"card\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">{task.task_name}</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* In Progress Column */}\r\n          <Droppable droppableId=\"inProgress\">\r\n            {(provided) => (\r\n              <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h2>In Progress</h2>\r\n                {tasks.inProgress.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={String(task.id)} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"card\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">{task.task_name}</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* Check Column */}\r\n          <Droppable droppableId=\"check\">\r\n            {(provided) => (\r\n              <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h2>Check</h2>\r\n                {tasks.check.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={String(task.id)} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"card\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">{task.task_name}</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* Finished Column */}\r\n          <Droppable droppableId=\"finished\">\r\n            {(provided) => (\r\n              <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h2>Finished</h2>\r\n                {tasks.finished.map((task, index) => (\r\n                  <Draggable key={task.id} draggableId={String(task.id)} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"card\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">{task.task_name}</h5>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n      <button onClick={() => setIsAuthenticated(false)}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}