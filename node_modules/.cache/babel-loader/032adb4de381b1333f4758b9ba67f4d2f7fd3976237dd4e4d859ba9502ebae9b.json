{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\react projects\\\\first project\\\\first_project\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\n//import './DashboardPage.css'; // Import your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    check: [],\n    finished: []\n  });\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/tasks'); // Adjust as necessary\n        const taskData = response.data;\n        const organizedTasks = {\n          todo: [],\n          inProgress: [],\n          check: [],\n          finished: []\n        };\n        taskData.forEach(task => {\n          switch (task.state) {\n            case 1:\n              organizedTasks.todo.push(task);\n              break;\n            case 2:\n              organizedTasks.inProgress.push(task);\n              break;\n            case 3:\n              organizedTasks.check.push(task);\n              break;\n            case 4:\n              organizedTasks.finished.push(task);\n              break;\n            default:\n              break;\n          }\n        });\n        setTasks(organizedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n    const sourceColumn = source.droppableId;\n    const destinationColumn = destination.droppableId;\n    const movedTask = tasks[sourceColumn][source.index];\n    const updatedSourceTasks = Array.from(tasks[sourceColumn]);\n    updatedSourceTasks.splice(source.index, 1);\n    const updatedDestinationTasks = Array.from(tasks[destinationColumn]);\n    updatedDestinationTasks.splice(destination.index, 0, movedTask);\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [sourceColumn]: updatedSourceTasks,\n      [destinationColumn]: updatedDestinationTasks\n    }));\n    const newState = {\n      todo: 1,\n      inProgress: 2,\n      check: 3,\n      finished: 4\n    }[destinationColumn];\n    updateTaskState(movedTask.id, newState);\n  };\n  const updateTaskState = async (taskId, newState) => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${taskId}`, {\n        state: newState\n      });\n    } catch (error) {\n      console.error('Error updating task state:', error);\n    }\n  };\n  const renderColumn = (columnId, columnTitle) => {\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: columnId,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: columnTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), tasks[columnId].map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id.toString(),\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: task['task name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [renderColumn('todo', 'To Do'), renderColumn('inProgress', 'In Progress'), renderColumn('check', 'Check'), renderColumn('finished', 'Finished')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAuthenticated(false),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"rMbaSFHOAZuwv5q+6EZAUV5EJ2Q=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","DashboardPage","setIsAuthenticated","_s","tasks","setTasks","todo","inProgress","check","finished","fetchTasks","response","get","taskData","data","organizedTasks","forEach","task","state","push","error","console","onDragEnd","result","destination","source","sourceColumn","droppableId","destinationColumn","movedTask","index","updatedSourceTasks","Array","from","splice","updatedDestinationTasks","prevTasks","newState","updateTaskState","id","taskId","put","renderColumn","columnId","columnTitle","children","provided","className","droppableProps","ref","innerRef","fileName","_jsxFileName","lineNumber","columnNumber","map","draggableId","toString","draggableProps","dragHandleProps","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project/src/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\n//import './DashboardPage.css'; // Import your CSS for styling\r\n\r\nconst DashboardPage = ({ setIsAuthenticated }) => {\r\n  const [tasks, setTasks] = useState({\r\n    todo: [],\r\n    inProgress: [],\r\n    check: [],\r\n    finished: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/tasks'); // Adjust as necessary\r\n        const taskData = response.data;\r\n\r\n        const organizedTasks = {\r\n          todo: [],\r\n          inProgress: [],\r\n          check: [],\r\n          finished: [],\r\n        };\r\n\r\n        taskData.forEach(task => {\r\n          switch (task.state) {\r\n            case 1:\r\n              organizedTasks.todo.push(task);\r\n              break;\r\n            case 2:\r\n              organizedTasks.inProgress.push(task);\r\n              break;\r\n            case 3:\r\n              organizedTasks.check.push(task);\r\n              break;\r\n            case 4:\r\n              organizedTasks.finished.push(task);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        setTasks(organizedTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const { source, destination } = result;\r\n    const sourceColumn = source.droppableId;\r\n    const destinationColumn = destination.droppableId;\r\n    const movedTask = tasks[sourceColumn][source.index];\r\n\r\n    const updatedSourceTasks = Array.from(tasks[sourceColumn]);\r\n    updatedSourceTasks.splice(source.index, 1);\r\n\r\n    const updatedDestinationTasks = Array.from(tasks[destinationColumn]);\r\n    updatedDestinationTasks.splice(destination.index, 0, movedTask);\r\n\r\n    setTasks((prevTasks) => ({\r\n      ...prevTasks,\r\n      [sourceColumn]: updatedSourceTasks,\r\n      [destinationColumn]: updatedDestinationTasks,\r\n    }));\r\n\r\n    const newState = {\r\n      todo: 1,\r\n      inProgress: 2,\r\n      check: 3,\r\n      finished: 4,\r\n    }[destinationColumn];\r\n\r\n    updateTaskState(movedTask.id, newState);\r\n  };\r\n\r\n  const updateTaskState = async (taskId, newState) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/tasks/${taskId}`, { state: newState });\r\n    } catch (error) {\r\n      console.error('Error updating task state:', error);\r\n    }\r\n  };\r\n\r\n  const renderColumn = (columnId, columnTitle) => {\r\n    return (\r\n      <Droppable droppableId={columnId}>\r\n        {(provided) => (\r\n          <div\r\n            className=\"column\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <h2>{columnTitle}</h2>\r\n            {tasks[columnId].map((task, index) => (\r\n              <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"task\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    {task['task name']}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"columns\">\r\n          {renderColumn('todo', 'To Do')}\r\n          {renderColumn('inProgress', 'In Progress')}\r\n          {renderColumn('check', 'Check')}\r\n          {renderColumn('finished', 'Finished')}\r\n        </div>\r\n      </DragDropContext>\r\n      <button onClick={() => setIsAuthenticated(false)}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IACjCY,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACjE,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI;QAE9B,MAAMC,cAAc,GAAG;UACrBT,IAAI,EAAE,EAAE;UACRC,UAAU,EAAE,EAAE;UACdC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ,CAAC;QAEDI,QAAQ,CAACG,OAAO,CAACC,IAAI,IAAI;UACvB,QAAQA,IAAI,CAACC,KAAK;YAChB,KAAK,CAAC;cACJH,cAAc,CAACT,IAAI,CAACa,IAAI,CAACF,IAAI,CAAC;cAC9B;YACF,KAAK,CAAC;cACJF,cAAc,CAACR,UAAU,CAACY,IAAI,CAACF,IAAI,CAAC;cACpC;YACF,KAAK,CAAC;cACJF,cAAc,CAACP,KAAK,CAACW,IAAI,CAACF,IAAI,CAAC;cAC/B;YACF,KAAK,CAAC;cACJF,cAAc,CAACN,QAAQ,CAACU,IAAI,CAACF,IAAI,CAAC;cAClC;YACF;cACE;UACJ;QACF,CAAC,CAAC;QAEFZ,QAAQ,CAACU,cAAc,CAAC;MAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzB,MAAM;MAAEC,MAAM;MAAED;IAAY,CAAC,GAAGD,MAAM;IACtC,MAAMG,YAAY,GAAGD,MAAM,CAACE,WAAW;IACvC,MAAMC,iBAAiB,GAAGJ,WAAW,CAACG,WAAW;IACjD,MAAME,SAAS,GAAGzB,KAAK,CAACsB,YAAY,CAAC,CAACD,MAAM,CAACK,KAAK,CAAC;IAEnD,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAI,CAAC7B,KAAK,CAACsB,YAAY,CAAC,CAAC;IAC1DK,kBAAkB,CAACG,MAAM,CAACT,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;IAE1C,MAAMK,uBAAuB,GAAGH,KAAK,CAACC,IAAI,CAAC7B,KAAK,CAACwB,iBAAiB,CAAC,CAAC;IACpEO,uBAAuB,CAACD,MAAM,CAACV,WAAW,CAACM,KAAK,EAAE,CAAC,EAAED,SAAS,CAAC;IAE/DxB,QAAQ,CAAE+B,SAAS,KAAM;MACvB,GAAGA,SAAS;MACZ,CAACV,YAAY,GAAGK,kBAAkB;MAClC,CAACH,iBAAiB,GAAGO;IACvB,CAAC,CAAC,CAAC;IAEH,MAAME,QAAQ,GAAG;MACf/B,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ,CAAC,CAACmB,iBAAiB,CAAC;IAEpBU,eAAe,CAACT,SAAS,CAACU,EAAE,EAAEF,QAAQ,CAAC;EACzC,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAOE,MAAM,EAAEH,QAAQ,KAAK;IAClD,IAAI;MACF,MAAMvC,KAAK,CAAC2C,GAAG,CAAC,+BAA+BD,MAAM,EAAE,EAAE;QAAEtB,KAAK,EAAEmB;MAAS,CAAC,CAAC;IAC/E,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMsB,YAAY,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;IAC9C,oBACE5C,OAAA,CAACJ,SAAS;MAAC+B,WAAW,EAAEgB,QAAS;MAAAE,QAAA,EAC7BC,QAAQ,iBACR9C,OAAA;QACE+C,SAAS,EAAC,QAAQ;QAAA,GACdD,QAAQ,CAACE,cAAc;QAC3BC,GAAG,EAAEH,QAAQ,CAACI,QAAS;QAAAL,QAAA,gBAEvB7C,OAAA;UAAA6C,QAAA,EAAKD;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrBlD,KAAK,CAACuC,QAAQ,CAAC,CAACY,GAAG,CAAC,CAACtC,IAAI,EAAEa,KAAK,kBAC/B9B,OAAA,CAACH,SAAS;UAAe2D,WAAW,EAAEvC,IAAI,CAACsB,EAAE,CAACkB,QAAQ,CAAC,CAAE;UAAC3B,KAAK,EAAEA,KAAM;UAAAe,QAAA,EACnEC,QAAQ,iBACR9C,OAAA;YACE+C,SAAS,EAAC,MAAM;YAChBE,GAAG,EAAEH,QAAQ,CAACI,QAAS;YAAA,GACnBJ,QAAQ,CAACY,cAAc;YAAA,GACvBZ,QAAQ,CAACa,eAAe;YAAAd,QAAA,EAE3B5B,IAAI,CAAC,WAAW;UAAC;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QACN,GAVarC,IAAI,CAACsB,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACZ,CAAC,EACDR,QAAQ,CAACc,WAAW;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAEhB,CAAC;EAED,oBACEtD,OAAA;IAAK+C,SAAS,EAAC,WAAW;IAAAF,QAAA,gBACxB7C,OAAA,CAACL,eAAe;MAAC2B,SAAS,EAAEA,SAAU;MAAAuB,QAAA,eACpC7C,OAAA;QAAK+C,SAAS,EAAC,SAAS;QAAAF,QAAA,GACrBH,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,EAC7BA,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,EACzCA,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,EAC9BA,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAClBtD,OAAA;MAAQ6D,OAAO,EAAEA,CAAA,KAAM3D,kBAAkB,CAAC,KAAK,CAAE;MAAA2C,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACnD,EAAA,CAnIIF,aAAa;AAAA6D,EAAA,GAAb7D,aAAa;AAqInB,eAAeA,aAAa;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}