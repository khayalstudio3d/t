{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\react projects\\\\first project\\\\first_project\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECRET_KEY = 'your-secret-key'; // Use the same secret key as in App.js\n\nfunction LoginPage({\n  setIsAuthenticated\n}) {\n  _s();\n  const [id, setId] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Function to encrypt the ID\n  const encryptValue = value => {\n    return CryptoJS.AES.encrypt(value, SECRET_KEY).toString();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        id\n      });\n      console.log(response.data.success);\n      if (response.data.success) {\n        setIsAuthenticated(true); // Set user as authenticated\n        localStorage.setItem('userId', encryptValue(id)); // Save encrypted ID to localStorage\n        navigate('/dashboard'); // Redirect to dashboard\n      } else {\n        console.log(response.data.success);\n        setError(response.data.message);\n      }\n    } catch (error) {\n      setError('An error occurred during login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userId\",\n        children: \"Enter Your ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userId\",\n        value: id,\n        onChange: e => setId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"A72fvEpynKIHPMDbcDqiq2ulGcA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","CryptoJS","jsxDEV","_jsxDEV","SECRET_KEY","LoginPage","setIsAuthenticated","_s","id","setId","error","setError","navigate","encryptValue","value","AES","encrypt","toString","handleSubmit","e","preventDefault","response","post","console","log","data","success","localStorage","setItem","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nimport './LoginPage.css';\r\n\r\nconst SECRET_KEY = 'your-secret-key'; // Use the same secret key as in App.js\r\n\r\nfunction LoginPage({ setIsAuthenticated }) {\r\n  const [id, setId] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Function to encrypt the ID\r\n  const encryptValue = (value) => {\r\n    return CryptoJS.AES.encrypt(value, SECRET_KEY).toString();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', { id });\r\n        console.log(response.data.success);\r\n        \r\n      if (response.data.success) {\r\n        setIsAuthenticated(true); // Set user as authenticated\r\n        localStorage.setItem('userId', encryptValue(id)); // Save encrypted ID to localStorage\r\n        navigate('/dashboard'); // Redirect to dashboard\r\n      } else {\r\n        console.log(response.data.success);\r\n        setError(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred during login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"userId\">Enter Your ID</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userId\"\r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}