{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\react projects\\\\first project\\\\first_project\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport './DashboardPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = ({\n  id,\n  setIsAuthenticated\n}) => {\n  _s();\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    check: [],\n    finished: []\n  });\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Make a GET request to fetch tasks for the logged-in user\n        const response = await axios.get(`http://localhost:5000/tasks/${id}`);\n        const taskData = response.data;\n        const organizedTasks = {\n          todo: [],\n          inProgress: [],\n          check: [],\n          finished: []\n        };\n        taskData.forEach(task => {\n          switch (task.state) {\n            case 1:\n              organizedTasks.todo.push(task);\n              break;\n            case 2:\n              organizedTasks.inProgress.push(task);\n              break;\n            case 3:\n              organizedTasks.check.push(task);\n              break;\n            case 4:\n              organizedTasks.finished.push(task);\n              break;\n            default:\n              break;\n          }\n        });\n        setTasks(organizedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [id]); // Depend on id so it refetches if id changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: () => {},\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAuthenticated(false),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"rMbaSFHOAZuwv5q+6EZAUV5EJ2Q=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","DashboardPage","id","setIsAuthenticated","_s","tasks","setTasks","todo","inProgress","check","finished","fetchTasks","response","get","taskData","data","organizedTasks","forEach","task","state","push","error","console","className","children","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project/src/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport './DashboardPage.css';\r\n\r\nconst DashboardPage = ({ id, setIsAuthenticated }) => {\r\n  const [tasks, setTasks] = useState({\r\n    todo: [],\r\n    inProgress: [],\r\n    check: [],\r\n    finished: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        // Make a GET request to fetch tasks for the logged-in user\r\n        const response = await axios.get(`http://localhost:5000/tasks/${id}`);\r\n        const taskData = response.data;\r\n\r\n        const organizedTasks = {\r\n          todo: [],\r\n          inProgress: [],\r\n          check: [],\r\n          finished: [],\r\n        };\r\n\r\n        taskData.forEach(task => {\r\n          switch (task.state) {\r\n            case 1:\r\n              organizedTasks.todo.push(task);\r\n              break;\r\n            case 2:\r\n              organizedTasks.inProgress.push(task);\r\n              break;\r\n            case 3:\r\n              organizedTasks.check.push(task);\r\n              break;\r\n            case 4:\r\n              organizedTasks.finished.push(task);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        setTasks(organizedTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [id]); // Depend on id so it refetches if id changes\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <DragDropContext onDragEnd={() => {}}>\r\n        <div className=\"columns\">\r\n          {/* Render tasks in columns here (to do, in progress, check, finished) */}\r\n        </div>\r\n      </DragDropContext>\r\n      <button onClick={() => setIsAuthenticated(false)}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IACjCa,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,+BAA+BX,EAAE,EAAE,CAAC;QACrE,MAAMY,QAAQ,GAAGF,QAAQ,CAACG,IAAI;QAE9B,MAAMC,cAAc,GAAG;UACrBT,IAAI,EAAE,EAAE;UACRC,UAAU,EAAE,EAAE;UACdC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ,CAAC;QAEDI,QAAQ,CAACG,OAAO,CAACC,IAAI,IAAI;UACvB,QAAQA,IAAI,CAACC,KAAK;YAChB,KAAK,CAAC;cACJH,cAAc,CAACT,IAAI,CAACa,IAAI,CAACF,IAAI,CAAC;cAC9B;YACF,KAAK,CAAC;cACJF,cAAc,CAACR,UAAU,CAACY,IAAI,CAACF,IAAI,CAAC;cACpC;YACF,KAAK,CAAC;cACJF,cAAc,CAACP,KAAK,CAACW,IAAI,CAACF,IAAI,CAAC;cAC/B;YACF,KAAK,CAAC;cACJF,cAAc,CAACN,QAAQ,CAACU,IAAI,CAACF,IAAI,CAAC;cAClC;YACF;cACE;UACJ;QACF,CAAC,CAAC;QAEFZ,QAAQ,CAACU,cAAc,CAAC;MAC1B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV,oBACEF,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA,CAACL,eAAe;MAAC8B,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAE;MAAAD,QAAA,eACnCxB,OAAA;QAAKuB,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAClB7B,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAM3B,kBAAkB,CAAC,KAAK,CAAE;MAAAqB,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACzB,EAAA,CA5DIH,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA8DnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}