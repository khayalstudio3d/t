{"ast":null,"code":"import React,{useEffect,useState}from'react';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import axios from'axios';import'./AdminPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminPage=()=>{const[tasks,setTasks]=useState({todo:[],inProgress:[],check:[],finished:[]});const[users,setUsers]=useState([]);// List of users to assign tasks\nconst[newTask,setNewTask]=useState({task_name:'',task_status:1,assignedUser:''// Track which user the task is assigned to (using user_id)\n});// Fetch tasks and users on page load\nuseEffect(()=>{const fetchData=async()=>{try{// Fetch users\nconst usersResponse=await axios.get('https://taskmanagerkhayal.fly.dev/users');// Modify URL to match your API\nconst usersData=usersResponse.data.results;setUsers(usersData);// Expecting an array of { user_id, username }\n// Fetch tasks\nconst tasksResponse=await axios.get('https://taskmanagerkhayal.fly.dev/tasks');// Modify URL to match your API\nconst taskData=tasksResponse.data.results;// Organize tasks based on their task_status\nconst organizedTasks={todo:[],inProgress:[],check:[],finished:[]};taskData.forEach(task=>{switch(task.task_status){case 1:organizedTasks.todo.push(task);break;case 2:organizedTasks.inProgress.push(task);break;case 3:organizedTasks.check.push(task);break;case 4:organizedTasks.finished.push(task);break;default:break;}});// Set the tasks\nsetTasks(organizedTasks);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);// Handle drag and drop functionality\nconst handleOnDragEnd=result=>{const{destination,source}=result;if(!destination)return;if(destination.droppableId===source.droppableId&&destination.index===source.index){return;}const sourceColumn=source.droppableId;const destinationColumn=destination.droppableId;const movedTask=tasks[sourceColumn][source.index];// If task is being moved between columns\nif(sourceColumn!==destinationColumn){const updatedSourceTasks=[...tasks[sourceColumn]];const updatedDestinationTasks=[...tasks[destinationColumn]];updatedSourceTasks.splice(source.index,1);updatedDestinationTasks.splice(destination.index,0,movedTask);setTasks({...tasks,[sourceColumn]:updatedSourceTasks,[destinationColumn]:updatedDestinationTasks});// Optionally, send an API request to update task status on the server\nmovedTask.task_status=getColumnStatus(destinationColumn);axios.put(`https://taskmanagerkhayal.fly.dev/dashboard?task_id=${movedTask.task_id}&task_status=${movedTask.task_status}`);}};// Map column IDs to task statuses\nconst getColumnStatus=columnId=>{switch(columnId){case'todo':return 1;case'inProgress':return 2;case'check':return 3;case'finished':return 4;default:return null;}};// Handle new task form submission\nconst handleNewTaskSubmit=async e=>{e.preventDefault();try{// Send the new task to the server with user_id\nconst response=await axios.post('https://taskmanagerkhayal.fly.dev/create-task',{userid:newTask.assignedUser,task_name:newTask.task_name,task_status:newTask.task_status// Send user_id\n});const fetchData=async()=>{try{// Fetch users\nconst usersResponse=await axios.get('https://taskmanagerkhayal.fly.dev/users');// Modify URL to match your API\nconst usersData=usersResponse.data.results;setUsers(usersData);// Expecting an array of { user_id, username }\n// Fetch tasks\nconst tasksResponse=await axios.get('https://taskmanagerkhayal.fly.dev/tasks');// Modify URL to match your API\nconst taskData=tasksResponse.data.results;// Organize tasks based on their task_status\nconst organizedTasks={todo:[],inProgress:[],check:[],finished:[]};taskData.forEach(task=>{switch(task.task_status){case 1:organizedTasks.todo.push(task);break;case 2:organizedTasks.inProgress.push(task);break;case 3:organizedTasks.check.push(task);break;case 4:organizedTasks.finished.push(task);break;default:break;}});// Set the tasks\nsetTasks(organizedTasks);}catch(error){console.error('Error fetching data:',error);}};fetchData();console.log(newTask.assignedUser);// Refresh task list after creating the new task\nsetTasks(prevTasks=>({...prevTasks,todo:[...prevTasks.todo,response.data]}));setNewTask({task_name:'',task_status:1,assignedUser:''});// Clear the form\n}catch(error){console.error('Error creating task:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Task Management\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleNewTaskSubmit,className:\"new-task-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Task Name\",value:newTask.task_name,onChange:e=>setNewTask({...newTask,task_name:e.target.value}),required:true}),/*#__PURE__*/_jsxs(\"select\",{value:newTask.assignedUser,onChange:e=>setNewTask({...newTask,assignedUser:e.target.value}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Assign to User\"}),users.map(user=>/*#__PURE__*/_jsx(\"option\",{value:user.id,children:user.username},user.id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Task\"})]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleOnDragEnd,children:/*#__PURE__*/_jsx(\"div\",{className:\"columns\",children:['todo','inProgress','check','finished'].map(status=>/*#__PURE__*/_jsx(Droppable,{droppableId:status,children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"column\",ref:provided.innerRef,...provided.droppableProps,children:[/*#__PURE__*/_jsx(\"h2\",{children:status==='todo'?'To Do':status==='inProgress'?'In Progress':status==='check'?'Check':'Finished'}),tasks[status].map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:String(task.task_id),index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:task.task_name}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-username\",children:[\"Assigned to: \",task.username]})]})})},task.task_id)),provided.placeholder]})},status))})})]});};export default AdminPage;","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","Droppable","Draggable","axios","jsx","_jsx","jsxs","_jsxs","AdminPage","tasks","setTasks","todo","inProgress","check","finished","users","setUsers","newTask","setNewTask","task_name","task_status","assignedUser","fetchData","usersResponse","get","usersData","data","results","tasksResponse","taskData","organizedTasks","forEach","task","push","error","console","handleOnDragEnd","result","destination","source","droppableId","index","sourceColumn","destinationColumn","movedTask","updatedSourceTasks","updatedDestinationTasks","splice","getColumnStatus","put","task_id","columnId","handleNewTaskSubmit","e","preventDefault","response","post","userid","log","prevTasks","className","children","onSubmit","type","placeholder","value","onChange","target","required","map","user","id","username","onDragEnd","status","provided","ref","innerRef","droppableProps","draggableId","String","draggableProps","dragHandleProps"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project - Copy/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport './AdminPage.css';\r\n\r\nconst AdminPage = () => {\r\n  const [tasks, setTasks] = useState({\r\n    todo: [],\r\n    inProgress: [],\r\n    check: [],\r\n    finished: [],\r\n  });\r\n\r\n  const [users, setUsers] = useState([]); // List of users to assign tasks\r\n  const [newTask, setNewTask] = useState({\r\n    task_name: '',\r\n    task_status: 1,\r\n    assignedUser: '', // Track which user the task is assigned to (using user_id)\r\n  });\r\n\r\n  // Fetch tasks and users on page load\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch users\r\n        const usersResponse = await axios.get('https://taskmanagerkhayal.fly.dev/users'); // Modify URL to match your API\r\n        const usersData = usersResponse.data.results;\r\n        setUsers(usersData); // Expecting an array of { user_id, username }\r\n\r\n        // Fetch tasks\r\n        const tasksResponse = await axios.get('https://taskmanagerkhayal.fly.dev/tasks'); // Modify URL to match your API\r\n        const taskData = tasksResponse.data.results;\r\n\r\n        // Organize tasks based on their task_status\r\n        const organizedTasks = {\r\n          todo: [],\r\n          inProgress: [],\r\n          check: [],\r\n          finished: [],\r\n        };\r\n\r\n        taskData.forEach(task => {\r\n          switch (task.task_status) {\r\n            case 1:\r\n              organizedTasks.todo.push(task);\r\n              break;\r\n            case 2:\r\n              organizedTasks.inProgress.push(task);\r\n              break;\r\n            case 3:\r\n              organizedTasks.check.push(task);\r\n              break;\r\n            case 4:\r\n              organizedTasks.finished.push(task);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n\r\n        // Set the tasks\r\n        setTasks(organizedTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle drag and drop functionality\r\n  const handleOnDragEnd = (result) => {\r\n    const { destination, source } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n      return;\r\n    }\r\n\r\n    const sourceColumn = source.droppableId;\r\n    const destinationColumn = destination.droppableId;\r\n\r\n    const movedTask = tasks[sourceColumn][source.index];\r\n\r\n    // If task is being moved between columns\r\n    if (sourceColumn !== destinationColumn) {\r\n      const updatedSourceTasks = [...tasks[sourceColumn]];\r\n      const updatedDestinationTasks = [...tasks[destinationColumn]];\r\n\r\n      updatedSourceTasks.splice(source.index, 1);\r\n      updatedDestinationTasks.splice(destination.index, 0, movedTask);\r\n\r\n      setTasks({\r\n        ...tasks,\r\n        [sourceColumn]: updatedSourceTasks,\r\n        [destinationColumn]: updatedDestinationTasks,\r\n      });\r\n\r\n      // Optionally, send an API request to update task status on the server\r\n      movedTask.task_status = getColumnStatus(destinationColumn);\r\n      axios.put(`https://taskmanagerkhayal.fly.dev/dashboard?task_id=${movedTask.task_id}&task_status=${movedTask.task_status}`);\r\n    }\r\n  };\r\n\r\n  // Map column IDs to task statuses\r\n  const getColumnStatus = (columnId) => {\r\n    switch (columnId) {\r\n      case 'todo':\r\n        return 1;\r\n      case 'inProgress':\r\n        return 2;\r\n      case 'check':\r\n        return 3;\r\n      case 'finished':\r\n        return 4;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Handle new task form submission\r\n  const handleNewTaskSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send the new task to the server with user_id\r\n      const response = await axios.post('https://taskmanagerkhayal.fly.dev/create-task', {\r\n       \r\n        \r\n        \r\n        userid: newTask.assignedUser,task_name: newTask.task_name,task_status: newTask.task_status, // Send user_id\r\n      });\r\n      const fetchData = async () => {\r\n        try {\r\n          // Fetch users\r\n          const usersResponse = await axios.get('https://taskmanagerkhayal.fly.dev/users'); // Modify URL to match your API\r\n          const usersData = usersResponse.data.results;\r\n          setUsers(usersData); // Expecting an array of { user_id, username }\r\n  \r\n          // Fetch tasks\r\n          const tasksResponse = await axios.get('https://taskmanagerkhayal.fly.dev/tasks'); // Modify URL to match your API\r\n          const taskData = tasksResponse.data.results;\r\n  \r\n          // Organize tasks based on their task_status\r\n          const organizedTasks = {\r\n            todo: [],\r\n            inProgress: [],\r\n            check: [],\r\n            finished: [],\r\n          };\r\n  \r\n          taskData.forEach(task => {\r\n            switch (task.task_status) {\r\n              case 1:\r\n                organizedTasks.todo.push(task);\r\n                break;\r\n              case 2:\r\n                organizedTasks.inProgress.push(task);\r\n                break;\r\n              case 3:\r\n                organizedTasks.check.push(task);\r\n                break;\r\n              case 4:\r\n                organizedTasks.finished.push(task);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n  \r\n          // Set the tasks\r\n          setTasks(organizedTasks);\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n      \r\n      console.log(newTask.assignedUser);\r\n\r\n      // Refresh task list after creating the new task\r\n      setTasks((prevTasks) => ({\r\n        ...prevTasks,\r\n        todo: [...prevTasks.todo, response.data],\r\n      }));\r\n\r\n      setNewTask({ task_name: '', task_status: 1, assignedUser: '' }); // Clear the form\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <h1>Admin Task Management</h1>\r\n\r\n      {/* Task creation form */}\r\n      <form onSubmit={handleNewTaskSubmit} className=\"new-task-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Name\"\r\n          value={newTask.task_name}\r\n          onChange={(e) => setNewTask({ ...newTask, task_name: e.target.value })}\r\n          required\r\n        />\r\n        <select\r\n          value={newTask.assignedUser}\r\n          onChange={(e) => setNewTask({ ...newTask, assignedUser: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\">Assign to User</option>\r\n          {users.map((user) => (\r\n            <option key={user.id} value={user.id}>\r\n              {user.username}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Create Task</button>\r\n      </form>\r\n\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <div className=\"columns\">\r\n          {/* Render columns for different task statuses */}\r\n          {['todo', 'inProgress', 'check', 'finished'].map((status) => (\r\n            <Droppable key={status} droppableId={status}>\r\n              {(provided) => (\r\n                <div className=\"column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                  <h2>{status === 'todo' ? 'To Do' : status === 'inProgress' ? 'In Progress' : status === 'check' ? 'Check' : 'Finished'}</h2>\r\n                  {tasks[status].map((task, index) => (\r\n                    <Draggable key={task.task_id} draggableId={String(task.task_id)} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          className=\"card\"\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{task.task_name}</h5>\r\n                            <p className=\"card-username\">Assigned to: {task.username}</p>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}