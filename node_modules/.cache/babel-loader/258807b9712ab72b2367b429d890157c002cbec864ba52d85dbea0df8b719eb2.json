{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import CryptoJS from'crypto-js';import'./LoginPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SECRET_KEY='your-secret-key';// Use the same secret key as in App.js\nfunction LoginPage(_ref){let{setoutId,setIsAuthenticated}=_ref;const[id,setId]=useState();const[error,setError]=useState('');const navigate=useNavigate();// Function to encrypt the ID\nconst encryptValue=value=>{return CryptoJS.AES.encrypt(value,SECRET_KEY).toString();};const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:3001/login',{id});//console.log({id});\n//console.log(response.data.success);\nif(response.data.success){setoutId(id);setIsAuthenticated(true);// Set user as authenticated\n//localStorage.setItem('userId', encryptValue(inputid)); // Save encrypted ID to localStorage\nnavigate('/dashboard');// Redirect to dashboard\n}else{//console.log(response.data.success);\nsetError(response.data.message);console.log(id);}}catch(error){setError('An error occurred during login');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userId\",children:\"Enter Your ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"userId\",value:id,onChange:e=>setId(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]});}export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","axios","CryptoJS","jsx","_jsx","jsxs","_jsxs","SECRET_KEY","LoginPage","_ref","setoutId","setIsAuthenticated","id","setId","error","setError","navigate","encryptValue","value","AES","encrypt","toString","handleSubmit","e","preventDefault","response","post","data","success","message","console","log","className","children","onSubmit","htmlFor","type","onChange","target","required"],"sources":["C:/Users/pc/Desktop/react projects/first project/first_project/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CryptoJS from 'crypto-js';\r\nimport './LoginPage.css';\r\n\r\nconst SECRET_KEY = 'your-secret-key'; // Use the same secret key as in App.js\r\n\r\nfunction LoginPage({setoutId, setIsAuthenticated }) {\r\n  const [id, setId] = useState();\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Function to encrypt the ID\r\n  const encryptValue = (value) => {\r\n    return CryptoJS.AES.encrypt(value, SECRET_KEY).toString();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', { id });\r\n      //console.log({id});\r\n      \r\n        //console.log(response.data.success);\r\n        \r\n      if (response.data.success) {\r\n        setoutId(id);\r\n        setIsAuthenticated(true); // Set user as authenticated\r\n        //localStorage.setItem('userId', encryptValue(inputid)); // Save encrypted ID to localStorage\r\n        navigate('/dashboard'); // Redirect to dashboard\r\n      } else {\r\n        //console.log(response.data.success);\r\n        setError(response.data.message);\r\n        console.log(id);\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred during login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"userId\">Enter Your ID</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userId\"\r\n          value={   id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,UAAU,CAAG,iBAAiB,CAAE;AAEtC,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAkC,IAAjC,CAACC,QAAQ,CAAEC,kBAAmB,CAAC,CAAAF,IAAA,CAChD,KAAM,CAACG,EAAE,CAAEC,KAAK,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAC9B,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAiB,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAiB,YAAY,CAAIC,KAAK,EAAK,CAC9B,MAAO,CAAAhB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAACF,KAAK,CAAEX,UAAU,CAAC,CAACc,QAAQ,CAAC,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACyB,IAAI,CAAC,6BAA6B,CAAE,CAAEd,EAAG,CAAC,CAAC,CACxE;AAEE;AAEF,GAAIa,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAE,CACzBlB,QAAQ,CAACE,EAAE,CAAC,CACZD,kBAAkB,CAAC,IAAI,CAAC,CAAE;AAC1B;AACAK,QAAQ,CAAC,YAAY,CAAC,CAAE;AAC1B,CAAC,IAAM,CACL;AACAD,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAC/BC,OAAO,CAACC,GAAG,CAACnB,EAAE,CAAC,CACjB,CACF,CAAE,MAAOE,KAAK,CAAE,CACdC,QAAQ,CAAC,gCAAgC,CAAC,CAC5C,CACF,CAAC,CAED,mBACET,KAAA,QAAK0B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B7B,IAAA,OAAA6B,QAAA,CAAI,OAAK,CAAI,CAAC,cACd3B,KAAA,SAAM4B,QAAQ,CAAEZ,YAAa,CAAAW,QAAA,eAC3B7B,IAAA,UAAO+B,OAAO,CAAC,QAAQ,CAAAF,QAAA,CAAC,eAAa,CAAO,CAAC,cAC7C7B,IAAA,UACEgC,IAAI,CAAC,MAAM,CACXxB,EAAE,CAAC,QAAQ,CACXM,KAAK,CAAKN,EAAG,CACbyB,QAAQ,CAAGd,CAAC,EAAKV,KAAK,CAACU,CAAC,CAACe,MAAM,CAACpB,KAAK,CAAE,CACvCqB,QAAQ,MACT,CAAC,cACFnC,IAAA,WAAQgC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,CACNnB,KAAK,eAAIV,IAAA,MAAG4B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEnB,KAAK,CAAI,CAAC,EAC/C,CAAC,CAEV,CAEA,cAAe,CAAAN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}